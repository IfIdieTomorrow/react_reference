[{"C:\\React_Practice\\immer-tutorial\\src\\index.js":"1","C:\\React_Practice\\immer-tutorial\\src\\App.js":"2"},{"size":500,"mtime":1607511685088,"results":"3","hashOfConfig":"4"},{"size":2001,"mtime":1609643780600,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bq732d",{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\React_Practice\\immer-tutorial\\src\\index.js",[],"C:\\React_Practice\\immer-tutorial\\src\\App.js",["11","12","13"],"import React, { useCallback, useState, useRef } from \"react\";\nimport produce from \"immer\";\n\nfunction App() {\n  const nextId = useRef(1);\n  const [form, setForm] = useState({ name: \"\", username: \"\" });\n  const [data, setData] = useState({\n    array: [],\n    uselessValue: null,\n  });\n\n  // input 수정을 위한 함수\n  const onChange = useCallback(\n    (e) => {\n      const { name, value } = e.target;\n      setForm(\n        produce((draft) => {\n          draft[name] = value;\n        })\n      );\n    },\n    [form]\n  );\n\n  // form 등록을 위한 함수\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      const info = {\n        id: nextId.current,\n        name: form.name,\n        username: form.username,\n      };\n\n      // array에 새 항목 등록\n      setData(\n        produce((draft) => {\n          draft.array.push(info);\n        })\n      );\n\n      // form 초기화\n      setForm({\n        name: \"\",\n        username: \"\",\n      });\n      nextId.current += 1;\n    },\n    [data, form.name, form.username]\n  );\n\n  // 항목을 삭제하는 함수\n  const onRemove = useCallback(\n    (id) => {\n      setData(\n        produce((draft) => {\n          draft.array.splice(\n            draft.array.findIndex((info) => info.id === id),\n            1\n          );\n        })\n      );\n    },\n    [data]\n  );\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"username\"\n          placeholder=\"아이디\"\n          value={form.username}\n          onChange={onChange}\n        />\n        <input\n          name=\"name\"\n          placeholder=\"이름\"\n          value={form.name}\n          onChange={onChange}\n        />\n        <button type=\"submit\">등록</button>\n      </form>\n      <div>\n        <ul>\n          {data.array.map((info) => (\n            <li key={info.id} onClick={() => onRemove(info.id)}>\n              {info.username} {info.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":22,"column":5,"nodeType":"16","endLine":22,"endColumn":11,"suggestions":"17"},{"ruleId":"14","severity":1,"message":"18","line":49,"column":5,"nodeType":"16","endLine":49,"endColumn":37,"suggestions":"19"},{"ruleId":"14","severity":1,"message":"18","line":64,"column":5,"nodeType":"16","endLine":64,"endColumn":11,"suggestions":"20"},"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'form'. Either exclude it or remove the dependency array.","ArrayExpression",["21"],"React Hook useCallback has an unnecessary dependency: 'data'. Either exclude it or remove the dependency array.",["22"],["23"],{"desc":"24","fix":"25"},{"desc":"26","fix":"27"},{"desc":"24","fix":"28"},"Update the dependencies array to be: []",{"range":"29","text":"30"},"Update the dependencies array to be: [form.name, form.username]",{"range":"31","text":"32"},{"range":"33","text":"30"},[496,502],"[]",[962,994],"[form.name, form.username]",[1263,1269]]